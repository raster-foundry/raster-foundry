version: "2.3"
services:
  postgres:
    image: quay.io/azavea/postgis:3-postgres12.2-slim
    volumes:
      - ./data/:/tmp/data/
    env_file: .env
    expose:
      - "5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 10s
    command: postgres -c log_statement=all

  nginx-api:
    image: raster-foundry-nginx-api:${GIT_COMMIT:-latest}
    build:
      context: .
      dockerfile: ./nginx/Dockerfile.api

  api-server-test:
    # If changing container, make sure to update app-backend/api/Dockerfile as well
    image: quay.io/azavea/openjdk-gdal:2.4-jdk8-slim
    links:
      - postgres:database.service.rasterfoundry.internal
      - memcached:memcached.service.rasterfoundry.internal
    depends_on:
      postgres:
        condition: service_healthy
    env_file: .env
    environment:
      - HIKARI_LOG_LEVEL=WARN
      - RF_LOG_LEVEL=WARN
      - TILE_SERVER_LOCATION
      - COURSIER_CACHE=/root/.coursier
      - BACKSPLASH_ENABLE_MULTITIFF=false
      - AWS_DEFAULT_PROFILE=raster-foundry
      - GROUNDWORK_URL_BASE=http://localhost:3000/
      - INTERCOM_ADMIN_ID=bogus
      - INTERCOM_TOKEN=bogus
    expose:
      - 9000
    volumes:
      - ./app-backend/:/opt/raster-foundry/app-backend/
      - ./scratch/:/opt/raster-foundry/scratch/
      - ./data/:/opt/data/
      - $HOME/.sbt:/root/.sbt
      - $HOME/.coursier:/root/.coursier
      - $HOME/.ivy2:/root/.ivy2
      - $HOME/.aws:/root/.aws:ro
    working_dir: /opt/raster-foundry/app-backend/api/target/scala-2.12/
    entrypoint: java
    command:
      - "-jar"
      - "api-assembly.jar"

  memcached:
    image: memcached:1.4-alpine
    command: -m 4096 -c 8192 -I 5242880b

  api-server:
    image: raster-foundry-api-server:${GIT_COMMIT:-latest}
    build:
      context: ./app-backend/api
      dockerfile: Dockerfile

  backsplash:
    image: raster-foundry-backsplash:${GIT_COMMIT:-latest}
    build:
      context: ./app-backend/backsplash-server
      dockerfile: Dockerfile

  app-migrations:
    image: raster-foundry-app-migrations:${GIT_COMMIT:-latest}
    build:
      context: ./app-backend/db
      dockerfile: Dockerfile.migrations
    volumes:
      - $HOME/.coursier-cache:/root/.coursier-cache

  batch:
    image: raster-foundry-batch:${GIT_COMMIT:-latest}
    build:
      context: ./app-tasks
      dockerfile: Dockerfile
    volumes:
      - ./app-tasks/rf/:/opt/raster-foundry/app-tasks/rf/

  batch-hitl:
    image: raster-foundry-batch-hitl:${GIT_COMMIT:-latest}
    build:
      context: ./app-hitl
      dockerfile: Dockerfile
    volumes:
      - ./app-hitl/hitl/:/opt/src/hitl/
    environment:
      - GPU_RUNTIME=nvdia

  build:
    image: raster-foundry-build:${GIT_COMMIT:-latest}
    build:
      context: ./app-backend
      dockerfile: Dockerfile.build
    env_file: .env
    environment:
      - COURSIER_CACHE=/root/.coursier
    volumes:
      - ./app-backend/:/opt/raster-foundry/app-backend/
      - ./build.sbt:/opt/raster-foundry/build.sbt
      - ./sbt:/opt/raster-foundry/sbt
      - ./.sbtopts:/opt/raster-foundry/.sbtopts
      - ./.jvmopts:/opt/raster-foundry/.jvmopts
      - ./project:/opt/raster-foundry/project
      - ./scratch/:/opt/raster-foundry/scratch/
      - ./.git:/opt/raster-foundry/.git
      - $HOME/.coursier:/root/.coursier
      - $HOME/.sbt:/root/.sbt
      - $HOME/.aws:/root/.aws:ro
    working_dir: /opt/raster-foundry
    entrypoint: ./sbt

  sbt-test:
    image: quay.io/azavea/openjdk-gdal:2.4-jdk8-slim
    depends_on:
      postgres:
        condition: service_healthy
    links:
      - postgres:database.service.rasterfoundry.internal
      - memcached:memcached.service.rasterfoundry.internal
      - api-server-test:api.service.rasterfoundry.internal
    env_file: .env
    environment:
      - RF_LOG_LEVEL=INFO
      - COURSIER_CACHE=/root/.coursier
      - SCOPE_IT_API_HOST=http://api.service.rasterfoundry.internal:9000
      - AUTH0_ENABLE_CACHE=true
    volumes:
      - ./app-backend/:/opt/raster-foundry/app-backend/
      - ./build.sbt:/opt/raster-foundry/build.sbt
      - ./sbt:/opt/raster-foundry/sbt
      - ./.sbtopts:/opt/raster-foundry/.sbtopts
      - ./.jvmopts:/opt/raster-foundry/.jvmopts
      - ./.scalafix.conf:/opt/raster-foundry/.scalafix.conf
      - ./.scalafix.conf:/opt/raster-foundry/.scalafmt.conf
      - ./project:/opt/raster-foundry/project
      - ./data/:/opt/data/
      - $HOME/.sbt:/root/.sbt
      - $HOME/.coursier:/root/.coursier
      - $HOME/.ivy2:/root/.ivy2
      - $HOME/.aws:/root/.aws:ro
    working_dir: /opt/raster-foundry
    entrypoint: ./sbt

  shellcheck:
    image: koalaman/shellcheck:stable
    volumes:
      - ./:/usr/local/src
    working_dir: /usr/local/src
