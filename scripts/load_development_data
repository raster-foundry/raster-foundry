#!/bin/bash
set -e

if [[ -n "${RF_DEBUG}" ]]; then
    set -x
fi

source "scripts/update"

DIR="$(dirname "$0")"

function usage() {

    echo -n \
"Usage: $(basename "$0")

Load a database dump from S3
"
}

function download_database_backup() {

    pushd "${DIR}/.."
    echo "Downloading database from s3"
    aws s3 cp "s3://${RF_SETTINGS_BUCKET}/database.pgdump" "data/database.pgdump"
    popd
}

function load_database_backup() {
    echo "Drop rasterfoundry database"
    docker-compose \
        exec -T postgres gosu postgres dropdb rasterfoundry

    echo "Create rasterfoundry database"
    docker-compose \
        exec -T postgres gosu postgres createdb rasterfoundry

    echo "Restore database from backup"
    # Command to create database backup
    # gosu postgres pg_dump -Fc rasterfoundry > database.pgdump
    docker-compose \
        exec -T postgres gosu postgres pg_restore -Fc -d rasterfoundry /tmp/data/database.pgdump &>/dev/null
}

if [ "${BASH_SOURCE[0]}" = "${0}" ]
then
    if [ "${1:-}" = "--help" ]
    then
        usage
    else
        # API server won't start until Postgres is passing Health Checks
        docker-compose up -d api-server
        if [ "${1:-}" = "--download" ] || [ ! -f data/database.pgdump ]; then
            download_database_backup
        fi
        load_database_backup
        docker-compose rm -sf api-server
    fi
    exit
fi
