#!/bin/bash

function usage() {
    echo -n \
"
Fixup the autogenerated symlink from forklift to be a relative path

Usage: $(basename "$0") [options] source_migration_number [target_migration_number]
    options:
        --move    moves source_migration_number to target_migration_number
"
}


if [ "${BASH_SOURCE[0]}" = "${0}" ]
then
    if [ "${1:-}" = "--help" ] || [ "$1" = "" ]
    then
        usage
    else
        MIGRATION_LINKS=app-backend/migrations/src/main/scala/migrations
        MIGRATIONS=app-backend/migrations/src_migrations/main/scala
        MIGRATIONS_REL=../../../../src_migrations/main/scala

        if [ "${1:-}" = "--move" ]; then
            SOURCE_MIGRATION=${2}
            TARGET_MIGRATION=${3}
            if [ -f "${MIGRATIONS}/${TARGET_MIGRATION}.scala" ]; then
                echo "Command would overwrite existing migration. Aborting."
                exit 1
            fi
            if [ ! -f "${MIGRATIONS}/${SOURCE_MIGRATION}.scala" ]; then
                echo "The source migration does not exist. Aborting."
                exit 1
            fi
            sed -i "s/M${SOURCE_MIGRATION}$/M${TARGET_MIGRATION}/" "${MIGRATION_LINKS}/Summary.scala"
            sed -i "s/M${SOURCE_MIGRATION}/M${TARGET_MIGRATION}/" "${MIGRATIONS}/${SOURCE_MIGRATION}.scala"
            sed -i "s/SqlMigration(${SOURCE_MIGRATION}/SqlMigration(${TARGET_MIGRATION}/" "${MIGRATIONS}/${SOURCE_MIGRATION}.scala"
            mv "${MIGRATIONS}/${SOURCE_MIGRATION}.scala" "${MIGRATIONS}/${TARGET_MIGRATION}.scala"
        else
            SOURCE_MIGRATION=${1}
            TARGET_MIGRATION=${1}
        fi

        rm "${MIGRATION_LINKS}/${SOURCE_MIGRATION}.scala"
        ln -s "${MIGRATIONS_REL}/${TARGET_MIGRATION}.scala" "${MIGRATION_LINKS}/${TARGET_MIGRATION}.scala"
    fi
    exit
fi
