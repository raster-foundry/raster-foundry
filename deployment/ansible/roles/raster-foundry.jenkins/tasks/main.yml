---
- name: Disable security for login, set number of executors
  lineinfile:
    dest=/var/lib/jenkins/config.xml
    state={{ item.state }}
    regexp={{ item.regexp }}
    line={{ item.line }}
    backrefs={{ item.backrefs }}
  notify:
    - Restart Jenkins
  with_items:
    - { regexp: '(.*<numExecutors>)\d+(</numExecutors>.*)',
        line: '\g<1>2\g<2>',
        state: present,
        backrefs: yes }

- name: Remove Authorization and Security XML from config.
  replace: dest=/var/lib/jenkins/config.xml regexp={{ item }}
  notify:
    - Restart Jenkins
  with_items:
    - '\s*<authorizationStrategy.*>(?:\n.*)*</authorizationStrategy>'
    - '\s*<securityRealm.*>(?:\n.*)*</securityRealm>'

- name: Add Jenkins Nginx config
  template: src=jenkins.conf.j2
            dest=/etc/nginx/sites-available/jenkins.conf
  notify:
    - Restart Nginx

- name: Enable Jenkins Nginx config
  file: src=/etc/nginx/sites-available/jenkins.conf
        dest=/etc/nginx/sites-enabled/jenkins
        state=link
  notify:
    - Restart Nginx

- name: Add jenkins user to docker, sudo and adm groups
  user: name="{{ jenkins_name }}"
        groups="{{ item }}"
        append=yes
  with_items:
    - "docker"
    - "adm"
    - "sudo"
  notify:
    - Restart Jenkins

- name: Setup hourly Docker cleanup cron task
  cron:
    name: "docker-prune"
    user: "{{ jenkins_name }}"
    special_time: "daily"
    job: docker system prune -af
    state: "present"
  changed_when: False

- name: Setup weekly NPM cleanup cron task
  cron:
    name: "npm-cleanup"
    user: "root"
    special_time: "weekly"
    job: find /var/lib/jenkins/workspace/ -path "*/.node_modules/*" -delete
    state: "present"
  changed_when: False

- name: Setup weekly Maven cleanup cron task
  cron:
    name: "maven-cleanup"
    user: "root"
    special_time: "weekly"
    job: find /var/lib/jenkins/workspace/ -path "*/target/*" -delete
    state: "present"
  changed_when: False

- name: Setup weekly Ivy cleanup cron task
  cron:
    name: "ivy-cleanup"
    user: "root"
    special_time: "weekly"
    job: find /var/lib/jenkins/workspace/ -path "*/.ivy/*" -delete
    state: "present"
  changed_when: False

- name: Setup weekly Coursier cleanup cron task
  cron:
    name: "coursier-cleanup"
    user: "root"
    special_time: "weekly"
    job: find /var/lib/jenkins/workspace/ -path "*/.coursier-cache/*" -delete
    state: "present"
  changed_when: False
