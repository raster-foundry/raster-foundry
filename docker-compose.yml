version: "2.3"
services:
  postgres:
    image: quay.io/azavea/postgis:2.3-postgres9.6-slim
    volumes:
      - ./data/:/tmp/data/
    env_file: .env
    expose:
      - "5432"
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 10s

  memcached:
    image: memcached:1.4-alpine
    command: -m 4096 -c 8192 -I 5242880b

  nginx-api:
    image: raster-foundry-nginx-api
    build:
      context: ./nginx
      dockerfile: Dockerfile.api
    ports:
      - "9100:443"
    links:
      - api-server
    volumes:
      - ./nginx/srv/dist/:/srv/dist/
      - ./nginx/etc/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/etc/nginx/includes/:/etc/nginx/includes/
      - ./nginx/etc/nginx/conf.d/api.conf:/etc/nginx/conf.d/default.conf

  nginx-backsplash:
    image: raster-foundry-nginx-backsplash
    build:
      context: ./nginx
      dockerfile: Dockerfile.backsplash
    ports:
      - "8081:443"
    extra_hosts:
      - "api-server:127.0.0.1"
    links:
      - backsplash
    volumes:
      - ./nginx/srv/dist/:/srv/dist/
      - ./nginx/etc/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/etc/nginx/includes/:/etc/nginx/includes/
      - ./nginx/etc/nginx/conf.d/backsplash.conf:/etc/nginx/conf.d/default.conf

  api-server:
    image: openjdk:8-jre
    links:
      - postgres:database.service.rasterfoundry.internal
      - memcached:tile-cache.service.rasterfoundry.internal
    depends_on:
      postgres:
        condition: service_healthy
    env_file: .env
    environment:
      - RF_LOG_LEVEL=DEBUG
      - TILE_SERVER_LOCATION
      - COURSIER_CACHE=/root/.coursier
    ports:
      - "9000:9000"
      - "9010:9010"
    volumes:
      - ./app-backend/:/opt/raster-foundry/app-backend/
      - ./scratch/:/opt/raster-foundry/scratch/
      - ./data/:/opt/data/
      - $HOME/.sbt:/root/.sbt
      - $HOME/.coursier:/root/.coursier
      - ./.bintray:/root/.bintray
      - $HOME/.ivy2:/root/.ivy2
      - $HOME/.aws:/root/.aws:ro
    working_dir: /opt/raster-foundry/app-backend/api/target/scala-2.12/
    entrypoint: java
    command:
      - "-Dcom.sun.management.jmxremote.rmi.port=9010"
      - "-Dcom.sun.management.jmxremote=true"
      - "-Dcom.sun.management.jmxremote.port=9010"
      - "-Dcom.sun.management.jmxremote.ssl=false"
      - "-Dcom.sun.management.jmxremote.authenticate=false"
      - "-Dcom.sun.management.jmxremote.local.only=false"
      - "-Djava.rmi.server.hostname=localhost"
      - "-jar"
      - "api-assembly.jar"

  batch:
    image: raster-foundry-batch
    volumes:
      - ./app-tasks/rf/:/opt/raster-foundry/app-tasks/rf/
      - ./app-backend/batch/target/scala-2.12/batch-assembly.jar:/opt/raster-foundry/jars/batch-assembly.jar
      - ./app-backend/backsplash-export/target/scala-2.12/backsplash-export-assembly.jar:/opt/raster-foundry/jars/backsplash-export-assembly.jar
      - ./data/:/opt/data/
      - $HOME/.aws:/root/.aws:ro
    build:
      context: ./app-tasks
      dockerfile: Dockerfile
    external_links:
      - postgres:database.service.rasterfoundry.internal
      - api-server:rasterfoundry.com
      - memcached:tile-cache.service.rasterfoundry.internal
    env_file: .env
    environment:
      - RF_HOST=http://rasterfoundry.com:9000
      - LOCAL_INGEST_CORES=2
      - LOCAL_INGEST_MEM_GB=4
      - EXPORT_TILE_SIZE=1024
      - AWS_DEFAULT_PROFILE=raster-foundry
      - BACKSPLASH_ENABLE_GDAL=true
    command: rf
    links:
      - postgres:database.service.rasterfoundry.internal

  backsplash:
    image: quay.io/azavea/openjdk-gdal:2.4-jdk8-slim
    depends_on:
      postgres:
        condition: service_healthy
    links:
      - postgres:database.service.rasterfoundry.internal
      - memcached:tile-cache.service.rasterfoundry.internal
    env_file: .env
    environment:
      - RF_LOG_LEVEL=DEBUG
      - COURSIER_CACHE=/root/.coursier
      - DB_THREADPOOL_THREADS=16
      - HTTP4S_THREADPOOL_THREADS=16
      - BLAZE_THREADPOOL_THREADS=4
      - BLAZE_CONNECTOR_POOL_SIZE=4
      - POSTGRES_DB_POOL_SIZE=32
      - HIKARI_CONNECTION_THREADS=16
      - RF_AUTHENTICATION_CACHE_ENABLE=true
      - BACKSPLASH_HISTOGRAM_CACHE_ENABLE=true
      - BACKSPLASH_TILE_CACHE_ENABLE=true
      - AWS_DEFAULT_PROFILE=raster-foundry
      - BACKSPLASH_AUTHORIZATION_CACHE_ENABLE=true
      - BACKSPLASH_RASTERSOURCE_CACHE_ENABLE=true
      - BACKSPLASH_ENABLE_GDAL=true
      - BACKSPLASH_CORE_STREAM_CONCURRENCY=16
      - BACKSPLASH_ENABLE_REQUEST_METRICS=false
    ports:
      - "8080:8080"
      - "9030:9030"
    volumes:
      - ./app-backend/:/opt/raster-foundry/app-backend/
      - ./data/:/opt/data/
      - $HOME/.sbt:/root/.sbt
      - $HOME/.coursier:/root/.coursier
      - ./.bintray:/root/.bintray
      - $HOME/.ivy2:/root/.ivy2
      - $HOME/.aws:/root/.aws:ro
    working_dir: /opt/raster-foundry/app-backend/backsplash-server/target/scala-2.12/
    entrypoint: java
    command:
      - "-Dcom.sun.management.jmxremote.rmi.port=9030"
      - "-Dcom.sun.management.jmxremote=true"
      - "-Dcom.sun.management.jmxremote.port=9030"
      - "-Dcom.sun.management.jmxremote.ssl=false"
      - "-Dcom.sun.management.jmxremote.authenticate=false"
      - "-Dcom.sun.management.jmxremote.local.only=false"
      - "-Djava.rmi.server.hostname=localhost"
      - "-jar"
      - "backsplash-assembly.jar"

  sbt:
    image: quay.io/azavea/openjdk-gdal:2.3.2-jdk8-slim
    depends_on:
      postgres:
        condition: service_healthy
    links:
      - postgres:database.service.rasterfoundry.internal
      - memcached:tile-cache.service.rasterfoundry.internal
    env_file: .env
    environment:
      - RF_LOG_LEVEL=INFO
      - COURSIER_CACHE=/root/.coursier
    volumes:
      - ./app-backend/:/opt/raster-foundry/app-backend/
      - ./data/:/opt/data/
      - $HOME/.sbt:/root/.sbt
      - $HOME/.coursier:/root/.coursier
      - ./.bintray:/root/.bintray
      - $HOME/.ivy2:/root/.ivy2
      - $HOME/.aws:/root/.aws:ro
    working_dir: /opt/raster-foundry/app-backend/
    entrypoint: ./sbt

  app-backend-migrations:
    image: boxfuse/flyway:5.2.4
    environment:
      - FLYWAY_DRIVER=org.postgresql.Driver
      - FLYWAY_URL=jdbc:postgresql://database.service.rasterfoundry.internal/
      - FLYWAY_USER=rasterfoundry
      - FLYWAY_PASSWORD=rasterfoundry
      - FLYWAY_LOCATIONS=filesystem:/opt/raster-foundry/app-backend/db/src/main/resources/migrations
      - FLYWAY_SCHEMAS=public
      - FLYWAY_BASELINE_ON_MIGRATE=true
    depends_on:
      postgres:
        condition: service_healthy
    links:
      - postgres:database.service.rasterfoundry.internal
    volumes:
      - ./app-backend/:/opt/raster-foundry/app-backend/
