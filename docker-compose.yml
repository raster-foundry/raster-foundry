version: '2'
services:
  postgres:
    image: quay.io/azavea/postgis:postgres9.5-postgis2.2
    volumes:
      - ./data/:/tmp/data/
    env_file: .env
    expose:
      - "5432"

  nginx:
    image: raster-foundry-nginx
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "9100:443"
    links:
      - app-server
      - airflow-webserver
      - airflow-flower
    volumes:
      - ./nginx/srv/dist/:/srv/dist/
      - ./nginx/etc/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/etc/nginx/conf.d/app.conf:/etc/nginx/conf.d/app.conf
      - ./nginx/etc/nginx/conf.d/airflow.conf:/etc/nginx/conf.d/airflow.conf

  app-frontend:
    image: node:6.8-wheezy
    working_dir: /opt/raster-foundry/app-frontend/
    volumes:
      - ./app-frontend/.babelrc:/opt/raster-foundry/app-frontend/.babelrc
      - ./app-frontend/config/:/opt/raster-foundry/app-frontend/config/
      - ./nginx/srv/dist/:/opt/raster-foundry/app-frontend/dist/
      - ./app-frontend/.eslintrc:/opt/raster-foundry/app-frontend/.eslintrc
      - ./app-frontend/karma.conf.js:/opt/raster-foundry/app-frontend/karma.conf.js
      - ./.node_modules:/opt/raster-foundry/app-frontend/node_modules
      - ./app-frontend/package.json:/opt/raster-foundry/app-frontend/package.json
      - ./app-frontend/src:/opt/raster-foundry/app-frontend/src
      - ./app-frontend/webpack.config.js:/opt/raster-foundry/app-frontend/webpack.config.js
    command: npm run build-watch

  app-server:
    image: quay.io/azavea/scala:2.11.8
    links:
      - postgres:database.service.rasterfoundry.internal
    env_file: .env
    ports:
      - "9000:9000"
    volumes:
      - ./app-backend/:/opt/raster-foundry/app-backend/
      - ./.ivy2:/root/.ivy2
      - ./.sbt:/root/.sbt
    working_dir: /opt/raster-foundry/app-backend/
    command: ./sbt app/run

  tile-server:
    image: quay.io/azavea/scala:2.11.8
    env_file: .env
    ports:
      - "9900:9900"
    volumes:
      - ./app-backend/:/opt/raster-foundry/app-backend/
      - ./.ivy2:/root/.ivy2
      - ./.sbt:/root/.sbt
    working_dir: /opt/raster-foundry/app-backend/
    command: ./sbt tile/run

  swagger-editor:
    image: swaggerapi/swagger-editor:latest
    ports:
      - "8888:8080"

  swagger-ui:
    image: nginx:1.10.1-alpine
    volumes:
      - ./docs/swagger/:/usr/share/nginx/html:ro
    ports:
      - "9999:80"

  redis:
    image: redis:3-alpine

  airflow-webserver:
    image: raster-foundry-airflow
    volumes:
      - ./app-tasks/usr/local/airflow/:/usr/local/airflow/
      - ./app-tasks/dags/:/opt/raster-foundry/app-tasks/dags/
      - ./app-tasks/rf/:/opt/raster-foundry/app-tasks/rf/
      - ./app-tasks/rf/src/rf/:/usr/local/bin/rf/
      - $HOME/.aws:/usr/local/airflow/.aws:ro
    build:
      context: ./app-tasks
      dockerfile: Dockerfile
    env_file: .env
    links:
      - postgres:database.service.rasterfoundry.internal
      - redis:cache.service.rasterfoundry.internal
    environment:
      - AIRFLOW_HOME=/usr/local/airflow
      - AIRFLOW_PARALLELISM=2
      - AIRFLOW_FERNET_KEY=secret
      - AIRFLOW_BASE_URL=http://localhost:8080
      - AIRFLOW_WEBSERVER_WORKERS=1
      - AIRFLOW_SECRET_KEY=secret
      - AIRFLOW_CELERY_CONCURRENCY=4
      - RF_HOST=http://rasterfoundry.com:9000
    ports:
      - "8080:8080"
    command: airflow webserver

  airflow-flower:
    image: raster-foundry-airflow
    volumes:
      - ./app-tasks/usr/local/airflow/:/usr/local/airflow/
    build:
      context: ./app-tasks
      dockerfile: Dockerfile
    links:
      - postgres:database.service.rasterfoundry.internal
      - redis:cache.service.rasterfoundry.internal
    env_file: .env
    environment:
      - AIRFLOW_HOME=/usr/local/airflow
      - AIRFLOW_REMOTE_LOG_FOLDER=
      - AIRFLOW_REMOTE_LOG_CONN_ID=
      - AIRFLOW_PARALLELISM=2
      - AIRFLOW_FERNET_KEY=secret
      - AIRFLOW_BASE_URL=http://localhost:8080
      - AIRFLOW_WEBSERVER_WORKERS=1
      - AIRFLOW_SECRET_KEY=secret
      - AIRFLOW_CELERY_CONCURRENCY=4
      - RF_HOST=http://rasterfoundry.com:9000
    ports:
      - "5555:5555"
    command: airflow flower

  airflow-scheduler:
    image: raster-foundry-airflow
    volumes:
      - ./app-tasks/usr/local/airflow/:/usr/local/airflow/
      - ./app-tasks/dags/:/opt/raster-foundry/app-tasks/dags/
      - ./app-tasks/rf/:/opt/raster-foundry/app-tasks/rf/
      - ./app-tasks/rf/src/rf/:/usr/local/bin/rf/
      - $HOME/.aws:/usr/local/airflow/.aws:ro
    build:
      context: ./app-tasks
      dockerfile: Dockerfile
    restart: always
    links:
      - postgres:database.service.rasterfoundry.internal
      - redis:cache.service.rasterfoundry.internal
    env_file: .env
    environment:
      - AIRFLOW_HOME=/usr/local/airflow
      - AIRFLOW_REMOTE_LOG_FOLDER=
      - AIRFLOW_REMOTE_LOG_CONN_ID=
      - AIRFLOW_PARALLELISM=32
      - AIRFLOW_FERNET_KEY=secret
      - AIRFLOW_BASE_URL=http://localhost:8080
      - AIRFLOW_WEBSERVER_WORKERS=1
      - AIRFLOW_SECRET_KEY=secret
      - AIRFLOW_CELERY_CONCURRENCY=4
      - PYTHONPATH=/opt/raster-foundry/app-tasks/rf/src/
      - RF_HOST=http://rasterfoundry.com:9000
    command: airflow scheduler

  airflow-worker:
    image: raster-foundry-airflow
    volumes:
      - ./app-tasks/usr/local/airflow/:/usr/local/airflow/
      - ./app-tasks/dags/:/opt/raster-foundry/app-tasks/dags/
      - ./app-tasks/rf/:/opt/raster-foundry/app-tasks/rf/
      - ./app-tasks/rf/src/rf/:/usr/local/bin/rf/
      - $HOME/.aws:/usr/local/airflow/.aws:ro
    build:
      context: ./app-tasks
      dockerfile: Dockerfile
    links:
      - postgres:database.service.rasterfoundry.internal
      - redis:cache.service.rasterfoundry.internal
      - app-server:rasterfoundry.com
    env_file: .env
    environment:
      - AIRFLOW_HOME=/usr/local/airflow
      - AIRFLOW_REMOTE_LOG_FOLDER=
      - AIRFLOW_REMOTE_LOG_CONN_ID=
      - AIRFLOW_PARALLELISM=32
      - AIRFLOW_FERNET_KEY=secret
      - AIRFLOW_BASE_URL=http://localhost:8080
      - AIRFLOW_WEBSERVER_WORKERS=1
      - AIRFLOW_SECRET_KEY=secret
      - AIRFLOW_CELERY_CONCURRENCY=4
      - RF_HOST=http://rasterfoundry.com:9000
      - C_FORCE_ROOT=True
    command: airflow worker
