akka {
  loglevel = INFO
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
}

# Akka http extensions settings


http {
  interface = "0.0.0.0"
  port = 9000
}

auth0 {
  clientId = ""
  clientId = ${?AUTH0_CLIENT_ID}

  domain = ""
  domain = ${?AUTH0_DOMAIN}

  # Auth0 Bearer with proper permissions for Management API
  bearer = ""
  bearer = ${?AUTH0_MANAGEMENT_BEARER}

  managementClientId = ""
  managementClientId = ${?AUTH0_MANAGEMENT_CLIENT_ID}

  managementSecret = ""
  managementSecret = ${?AUTH0_MANAGEMENT_SECRET}
}

client {
  clientEnvironment = ""
  clientEnvironment = ${?ENVIRONMENT}
}

rollbar {
  clientToken = ""
  clientToken = ${?ROLLBAR_CLIENT_TOKEN}
}

s3 {
  region = "us-east-1"
  region = ${?AWS_REGION}
  dataBucket = ${?DATA_BUCKET}
  thumbnailBucket = ${?THUMBNAIL_BUCKET}
  scopedUploadRoleArn = ${?SCOPED_UPLOAD_ROLE_ARN}
}

intercom {
  appId = ""
  appId = ${?INTERCOM_APP_ID}
}

tileServer {
  location = ""
  location = ${?TILE_SERVER_LOCATION}
}

dropbox {
  appKey = ""
  appKey = ${?DROPBOX_KEY}
  appSecret = ""
  appSecret = ${?DROPBOX_SECRET}
}

sentinel2 {
  datasourceId = "4a50cb75-815d-4fe5-8bc1-144729ce5b42"
}
