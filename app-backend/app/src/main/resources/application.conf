akka {
  loglevel = DEBUG
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
}

# Akka http extensions settings
akka.http {
  extensions {
    pagination{
      offset-param-name = "page"
      limit-param-name = "pageSize"
      sort-param-name = "sort"
      asc-param-name = "asc"
      desc-param-name = "desc"
      sorting-separator = ";"
      order-separator  = ","
      defaults {
        enabled = true
        always-fallback = true
        offset = 0
        limit = 30
      }
    }
  }
}

http {
  interface = "0.0.0.0"
  port = 9000
}

slick {
  driver = "slick.driver.PostgresDriver$"
  db {
    driver = org.postgresql.Driver
    url = "jdbc:postgresql://database.service.rasterfoundry.internal/"
    url = ${?POSTGRES_URL}
    name = "rasterfoundry"
    name = ${?POSTGRES_NAME}
    user = "rasterfoundry"
    user = ${?POSTGRES_USER}
    password = "rasterfoundry"
    password = ${?POSTGRES_PASSWORD}
  }
}

auth0 {
  clientId = ""
  clientId = ${?AUTH0_CLIENT_ID}
  domain = ""
  domain = ${?AUTH0_DOMAIN}
  # Development Secret Only
  secret = ""
  secret = ${?AUTH0_CLIENT_SECRET}
  # Auth0 Bearer with proper permissions for Management API
  bearer = ""
  bearer = ${?AUTH0_MANAGEMENT_BEARER}
}

featureFlags {
  features = [
    {
      key = "profile-org-edit",
      active = false,
      name = "Profile Organization Edit",
      description = "Join / Create / Edit / Leave / Delete organizations in user profile settings"
    }
    {
      key = "make-source-histogram"
      active = false
      name = "Make source histogram"
      description = "Show or hide the 'make source histogram' link in color correction"
    }
  ]
}
